{"version":3,"sources":["components/Form.jsx","components/Pets.jsx","components/Edit.jsx","components/View.jsx","App.js","serviceWorker.js","index.js"],"names":["Form","props","useState","name","setName","type","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","onSubmit","e","preventDefault","pet","axios","post","then","res","console","log","data","navigate","catch","err","className","onChange","target","value","message","Pets","pets","setPets","fetchPets","get","useEffect","border","map","p","i","key","to","_id","onClick","id","delete","Edit","petToUpdate","put","View","setId","counter","setCounter","likes","class","htmlFor","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d640f282.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst Form = (props) => {\n\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skill1, setSkill1] = useState(\"\");\n  const [skill2, setSkill2] = useState(\"\");\n  const [skill3, setSkill3] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  \n    const addPet = (e) => {\n      e.preventDefault();\n      const pet = { name, type, description, skill1, skill2, skill3 }\n\n      axios.post(\"http://localhost:8000/api/pets\", pet)\n        .then(res => {\n          console.log(res);\n          if(res.data.errors) {\n            setErrors(res.data.errors);\n          } else {\n            navigate(\"/\");\n          }\n        })\n        .catch(err => console.log(err));\n    }\n\n    return(\n        <form onSubmit={ addPet }>\n        <div className=\"form-group\">\n          <label>Name: </label>\n          <input type=\"text\" className=\"form-control\" onChange={ e => setName(e.target.value) } />\n          { errors.name ? <p className=\"text-danger\">{errors.name.message}</p> : \"\" }      \n        </div>\n        <div className=\"form-group\">\n          <label>Type: </label>\n          <input type=\"text\" className=\"form-control\" onChange={ e => setType(e.target.value) } value = { type } />\n          { errors.type ? <p className=\"text-danger\">{errors.type.message}</p> : \"\" }\n        </div>\n        <div className=\"form-group\">\n          <label>Description: </label>\n          <input type=\"text\" className=\"form-control\" onChange={ e => setDescription(e.target.value) } />\n          { errors.description ? <p className=\"text-danger\">{errors.description.message}</p> : \"\" }       \n        </div>\n        <div className=\"form-group\">\n          <label>Skill 1: (optional) </label>\n          <input type=\"text\" className=\"form-control\" onChange={ e => setSkill1(e.target.value) } />\n        </div>\n        <div className=\"form-group\">\n          <label>Skill 2: (optional) </label>\n          <input type=\"text\" className=\"form-control\" onChange={ e => setSkill2(e.target.value) } />     \n        </div>\n        <div className=\"form-group\">\n          <label>Skill 3: (optional) </label>\n          <input type=\"text\" className=\"form-control\" onChange={ e => setSkill3(e.target.value) } />\n        </div>\n        <input className=\"btn btn-outline-primary\" type=\"submit\" />\n        {/* <p>{ JSON.stringify(errors) }</p> */}\n      </form>\n    );\n}\n\nexport default Form;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from '@reach/router';\n\n\nconst Pets = (props) => {\n\n    const [pets, setPets] = useState([]);\n\n    const adoptPet = (id) => {\n      axios.delete(`http://localhost:8000/api/pets/${id}`)\n        .then(res => {\n          console.log(res);\n          fetchPets();\n        })\n        .catch(err => console.log(err));\n    }\n\n    const fetchPets = () => {\n      axios.get(\"http://localhost:8000/api/pets\")\n        .then(res => {\n          console.log(res);\n          setPets(res.data);\n        })\n        .catch(err => console.log(err));\n    }\n\n    useEffect ( () => {\n      fetchPets();\n    }, [props])\n\n    return(\n      <div>\n            <h4>These pets are looking for a good home:</h4>\n            <table border=\"1\">\n            <tbody>\n                <tr>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Description</th>\n                    <th>Actions</th>\n                </tr>\n                {pets.map( (p, i) => \n                    <tr key={ i }>\n                    <td>{p.name}</td>\n                    <td>{p.type}</td>\n                    <td>{p.description}</td>        \n                    <button><Link to={ \"/pets/\" + p._id } >Details</Link></button>\n                    <button><Link to={ \"/pet/edit/\" + p._id }>Edit Pet</Link></button>\n                    <button onClick={ (e) => adoptPet(p._id) }>Adopt</button> \n                </tr>\n                )}\n            </tbody>\n        </table>\n        </div>\n    );\n}\n\nexport default Pets;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {  navigate } from '@reach/router';\n\n\nconst Edit = (props) => {\n\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");\n    const [skill2, setSkill2] = useState(\"\");\n    const [skill3, setSkill3] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n            .then(res => {\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkill1(res.data.skill1);\n                setSkill2(res.data.skill2);\n                setSkill3(res.data.skill3);\n                console.log(res);\n                //fetchPets();\n            })\n    }, [props])\n    \n    const editPet = (e) => {\n      e.preventDefault();\n\n      const petToUpdate = { name, type, description, skill1, skill2, skill3 }\n\n      axios.put(`http://localhost:8000/api/pets/${props._id}`, petToUpdate)\n        .then( res => {\n          if(res.data.errors) {\n            setErrors(res.data.errors);\n          } else {\n            navigate(`/pets/${props._id}`);\n          }\n        })\n        .catch(err => console.log(err));\n    }\n\n    return(\n      <div>\n      <p>Edit <b>{ name }</b></p>\n      \n        <form onSubmit={ editPet }>\n            <p>Name: <input type=\"text\" onChange={ e => setName(e.target.value) } value={ name } /></p> {/* 2 way data bind - what does that mean? */}\n            { errors.name ? <p>{errors.name.message}</p> : \"\" }\n            <p>Type: <input type=\"text\" onChange={ e => setType(e.target.value) } value={ type } /></p>\n            { errors.type ? <p>{errors.type.message}</p> : \"\" }\n            <p>Description: <input type=\"text\" onChange={ e => setDescription(e.target.value) } value={ description } /></p>\n            { errors.description ? <p>{errors.description.message}</p> : \"\" }\n            <p>Skill 1: (optional) <input type=\"text\" onChange={ e => setSkill1(e.target.value) } value={ skill1 } /></p>\n            <p>Skill 2: (optional) <input type=\"text\" onChange={ e => setSkill2(e.target.value) } value={ skill2 } /></p>\n            <p>Skill 3: (optional) <input type=\"text\" onChange={ e => setSkill3(e.target.value) } value={ skill3 } /></p>\n            <input type=\"submit\" value=\"Edit Pet\" />\n            \n        </form>\n        </div>\n    );\n\n}\n\nexport default Edit;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, navigate } from '@reach/router';\n\nconst View = (props) => {\n\n    const [pets, setPets] = useState(\"\");\n    const [id, setId] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(1);\n    const [description, setDescription] = useState(\"\")\n    const [skill1, setSkill1] = useState(\"\");\n    const [skill2, setSkill2] = useState(\"\");\n    const [skill3, setSkill3] = useState(\"\");\n    const [counter, setCounter] = useState(0);\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n        .then(res => {\n            console.log(res);\n            setId(res.data._id);\n            setName(res.data.name);\n            setType(res.data.type);\n            setDescription(res.data.description);\n            setSkill1(res.data.skill1);\n            setSkill2(res.data.skill2);\n            setSkill3(res.data.skill3);\n            fetchPets();\n            likes();\n        })\n        .catch(err => console.log(err));\n    }, [props]);\n\n    const adoptPet = (id) => {\n      axios.delete(`http://localhost:8000/api/pets/${props._id}`)\n        .then(res => {\n          console.log(res);\n          navigate(\"/\");\n        })\n        .catch(err => console.log(err));\n    }\n\n    const fetchPets = () => {\n      axios.get(\"http://localhost:8000/api/pets\")\n        .then(res => {\n          console.log(res);\n          setPets(res.data);\n        })\n        .catch(err => console.log(err));\n    }\n    \n    const likes = () => {\n      let likes = 0;\n      setCounter(likes + 1);\n\n    }\n\n    return(\n      <div>\n        <h2>Details about: { name }</h2>\n      <div className=\"col-sm-6 mb-3\">\n          <div className=\"card\">\n        <div className=\"card-header bg-dark text-white\">\n        <span className=\"mr-2\">{ name }</span>\n        \n        <button className=\"btn btn-sm btn-outline-primary mr-2\"><Link to={ \"/pet/edit/\" + id }>Edit Pet</Link></button>\n        <button className=\"btn btn-sm btn-outline-danger mr-2\" onClick={ adoptPet }>Adopt</button>\n        \n        </div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col\">\n            <div class=\"type\">\n            <label htmlFor=\"type\"><b>Type:</b>\n              <p>{ type }</p>\n            </label>\n          </div>\n          <div class=\"type\">\n            <label htmlFor=\"desc\"><b>Description:</b>\n              <p>{ description }</p>\n            </label>\n          </div>\n            </div>\n            <div className=\"col\">\n              <div class=\"skills\">\n              <label htmlFor=\"skill1\"><b>Skills:</b>\n                <p>{ skill1 }</p>\n                <p>{ skill2 }</p>\n                <p>{ skill3 }</p>\n              </label>\n          </div>\n            </div> \n          </div>\n          \n          \n          <div class=\"counter\">\n          { counter }\n          <button onClick= { likes }>Like { name }</button>\n        </div>\n          </div>\n          \n        </div>\n        \n        \n      </div>  \n      \n    </div>\n    );\n    \n}\n\nexport default View;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Router, Link } from '@reach/router';\nimport Form from './components/Form';\nimport Pets from './components/Pets';\nimport Edit from './components/Edit';\nimport View from './components/View';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron bg-blue text white\">\n        <h1>Pet Shelter</h1>\n        <nav class=\"petlink\">\n        <Link to=\"/\"><button>Home</button></Link>{\" \"}\n        <Link to=\"/new\"><button>Add a pet to the shelter</button></Link>\n      </nav>\n      </div>\n      \n      <div>\n      \n      </div>\n      <div>\n        <Router>\n          <Form path=\"/new\" />\n          <Pets path=\"/\" />\n          <View path=\"/pets/:_id\" />\n          <Edit path=\"/pet/edit/:_id\" />\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}